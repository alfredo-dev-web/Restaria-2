{% comment %}
  Renders product variant-picker

  Accepts:
  - product: {Object} product object.
  - block: {Object} passing the block information.
  - product_form_id: {String} Id of the product form to which the variant picker is associated.
  Usage:
  {% render 'product-variant-picker', product: product, block: block, product_form_id: product_form_id %}
{% endcomment %}
{%- unless product.has_only_default_variant -%}
  <variant-selects
    id="variant-selects-{{ section.id }}"
    data-section="{{ section.id }}"
    {{ block.shopify_attributes }}
  >
    {%- for option in product.options_with_values -%}
      {%- liquid
        assign swatch_count = option.values | map: 'swatch' | compact | size
        assign picker_type = block.settings.picker_type

        if swatch_count > 0 and block.settings.swatch_shape != 'none'
          if block.settings.picker_type == 'dropdown'
            assign picker_type = 'swatch_dropdown'
          else
            assign picker_type = 'swatch'
          endif
        endif
      -%}
      {% if option.name == 'Taglia' or option.name == 'Lunghezza' %}
        <!-- Il nostro bottone + popup -->
        <div>
          <div class="popup_gap" style="display: flex; align-items: center; gap: 50px; margin-bottom: 12px;">
            <button
              class="open-picker"
              data-handle="{{ option.name | handle }}"
              data-section="{{ section.id }}"
            >
              Scegli la {{ option.name }}
            </button>
            <a href="/pages/guida-alla-taglia" target="_blank" id="size-help-link" rel="noopener noreferrer">
              Come scegliere la taglia?
            </a>
            <span
              class="selected-size"
              data-handle="{{ option.name | handle }}"
              data-section="{{ section.id }}"
            >
              {%- for value in option.values -%}
                {%- if value.selected %}
                  {{ value }}
                {% endif -%}
              {%- endfor -%}
            </span>
          </div>

          <div
            class="popup"
            data-handle="{{ option.name | handle }}"
            data-section="{{ section.id }}"
            style="
              display:none; position:fixed;top:50%;left:50%;transform:translate(-50%, -50%);
              background:#fff; padding:20px; border-radius:12px; box-shadow:0 8px 16px rgba(0,0,0,0.25); z-index:1000;
            "
          >
            <h3>Scegli la {{ option.name }}</h3>

            <fieldset id="popup-menu" class="js product-form__input product-form__input--pill">
              {% render 'product-variant-options',
                product: product,
                option: option,
                block: block,
                picker_type: 'button'
              %}
            </fieldset>
            <button class="close-popup" style="margin-top:15px;">Chiudi</button>
          </div>
        </div>
      {%- else -%}
        {%- if picker_type == 'swatch' -%}
          <fieldset class="js product-form__input product-form__input--swatch">
            <legend class="form__label">
              {{ option.name }}:
              <span data-selected-value>
                {{- option.selected_value -}}
              </span>
            </legend>
            {% render 'product-variant-options',
              product: product,
              option: option,
              block: block,
              picker_type: picker_type
            %}
          </fieldset>
        {%- elsif picker_type == 'button' -%}
          <fieldset class="js product-form__input product-form__input--pill">
            {%- liquid
              assign optionNames = settings.optionName | split: ', '
              assign useColor = false
            -%}
            {%- for optionColor in optionNames -%}
              {%- if optionColor == option.name -%}
                {%- liquid
                  assign useColor = true
                -%}
                {%- break -%}
              {%- endif -%}
            {%- endfor -%}

            {%- if useColor -%}
              <legend class="form__label ">
                {{ option.name }}:<span id="selected-{{ option.name }}"> {{ option.selected_value }}</span>
              </legend>
              {% render 'color-option', product: product, option: option, block: block %}
            {%- else -%}
              <div class="conte">
                <legend class="form__label">{{ option.name }}</legend>
                <div class="icona-con-link">
                  <a href="/pages/guida-alla-taglia" target="_blank">
                    <img
                      src="https://cdn.shopify.com/s/files/1/0879/3944/9167/files/20424914671645017717.svg?v=1740867958"
                      alt="Icona 2"
                    >
                    <p>Guida alla Taglia</p>
                  </a>
                </div>
              </div>
              {% render 'product-variant-options',
                product: product,
                option: option,
                block: block,
                picker_type: picker_type
              %}
            {%- endif -%}
          </fieldset>
        {%- else -%}
          <div class="product-form__input product-form__input--dropdown">
            <label class="form__label" for="Option-{{ section.id }}-{{ forloop.index0 }}">
              {{ option.name }}
            </label>
            <div class="select">
              {%- if picker_type == 'swatch_dropdown' -%}
                <span
                  data-selected-value
                  class="dropdown-swatch"
                >
                  {% render 'swatch', swatch: option.selected_value.swatch, shape: block.settings.swatch_shape %}
                </span>
              {%- endif -%}
              <select
                id="Option-{{ section.id }}-{{ forloop.index0 }}"
                class="select__select"
                name="options[{{ option.name | escape }}]"
                form="{{ product_form_id }}"
              >
                {% render 'product-variant-options',
                  product: product,
                  option: option,
                  block: block,
                  picker_type: picker_type
                %}
              </select>
              <span class="svg-wrapper">
                {{- 'icon-caret.svg' | inline_asset_content -}}
              </span>
            </div>
          </div>
        {%- endif -%}
      {%- endif -%}
    {%- endfor -%}
    <style>
      /* Overlay popup */
      .popup {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        width: 90%;
        max-width: 360px;
        transform: translate(-50%, -50%);
        background-color: #fff;
        border-radius: 20px;
        box-shadow: 0 12px 30px rgba(0, 0, 0, 0.25);
        padding: 25px 30px;
        z-index: 1000;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans',
          'Helvetica Neue', sans-serif;
      }
      @media screen and (max-width: 767px) {
        .popup {
          padding: 15px 20px !important;
        }
      }

      /* Titolo popup */
      .popup h3 {
        font-weight: 600;
        font-size: 1.2rem;
        margin-bottom: 18px;
        color: #1c1c1e;
        text-align: center;
      }

      /* Container riquadri taglia */
      .popup #popup-menu > input[type='radio'] + label {
        padding: 14px 18px;
        margin: 8px 6px;
        border-radius: 14px;
        border: 1.5px solid #d1d1d6;
        background-color: #f2f2f7;
        color: #1c1c1e;
        font-weight: 500;
        font-size: 1rem;
        cursor: pointer;
        transition: all 0.25s ease;
        display: inline-block;
        min-width: 55px;
        text-align: center;
        box-sizing: border-box;
      }

      /* Hover riquadri */
      .popup #popup-menu > input[type='radio'] + label:hover {
        background-color: #e5e5ea;
        border-color: #a1a1aa;
      }

      /* Riquadro selezionato */
      .popup #popup-menu > input[type='radio'] + label.selected {
        background-color: #efebe8;
        border-color: #efebe8;
        color: #fff;
        font-weight: 600;
      }

      /* Bottone chiudi popup */
      .close-popup {
        margin-top: 22px;
        background-color: #efebe8;
        border: none;
        padding: 12px 28px;
        width: 100%;
        color: black;
        font-weight: 600;
        font-size: 1rem;
        border-radius: 16px;
        cursor: pointer;
        transition: background-color 0.3s ease;
      }

      .close-popup:hover {
        background-color: #efebe8;
      }

      /* Bottone apri popup */
      .open-picker {
        display: inline-block;
        padding: 14px 32px;
        background-color: #efebe8;
        color: black;
        border: none;
        border-radius: 16px;
        font-size: 1.4rem;
        cursor: pointer;
        box-shadow: 0 6px 12px #efebe8(0, 122, 255, 0.3);
        transition: background-color 0.3s ease;
      }
      .open-picker:hover {
        background-color: #e9e9f0;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.08);
        transform: translateY(-1px);
      }

      .open-picker:active {
        background-color: #dcdce0;
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
        transform: scale(0.98);
      }

      /* Testo selezione */
      #selected-size {
        margin-left: 12px;
        text-align: -webkit-center;
        font-weight: 500;
        font-size: 1.5rem;
        vertical-align: middle;
        color: black;
      }
      #size-help-link {
        font-size: 1.2rem;
        color: black;
        text-decoration: none;
        font-weight: 500;
        border-bottom: 1.5px solid transparent;
        transition: border-color 0.25s ease;
        cursor: pointer;
        white-space: nowrap;
      }

      #size-help-link:hover,
      #size-help-link:focus {
        border-color: #efebe8;
        outline: none;
        text-decoration: none;
      }
      /* --- Swatch Pallini Colore --- */

      /* Container dei pallini */
      .swatch-list {
        display: flex;
        gap: 12px;
        margin-top: 8px;
      }

      /* Pallino colore */
      .swatch-item {
        width: 32px;
        height: 32px;
        border-radius: 50%;
        cursor: pointer;
        border: 2px solid transparent;
        display: inline-block;
        position: relative;
        transition: border-color 0.3s ease;
      }

      /* Pallino selezionato evidenziato con bordo nero */
      .swatch-item.selected {
        border-color: #000;
      }

      /* Nascondi input radio */
      .swatch-item input[type='radio'].sr-only {
        position: absolute;
        opacity: 0;
        width: 0;
        height: 0;
        pointer-events: none;
      }
    </style>
    <script>
      document.addEventListener('DOMContentLoaded', function () {
        let fieldset = document.getElementById('popup-menu');
        let ProductForm = document.getElementsByClassName('product-form')[0];

        function clearLabels() {
          document.querySelectorAll('#popup-menu label').forEach((l) => l.classList.remove('selected'));
        }
        function markSelectedLabel() {
          clearLabels();
          let fieldset = document.getElementById('popup-menu');
          const selected = fieldset.querySelector('input[type="radio"]:checked');
          if (selected) {
            const label = selected.labels && selected.labels[0];
            if (label) label.classList.add('selected');
          }
        }

        // 1) All’avvio della pagina
        markSelectedLabel();

        // 2) Ogni volta che un radio cambia
        fieldset.querySelectorAll('input[type="radio"]').forEach((radio) => {
          radio.addEventListener('change', () => {
            // lascio sempre una micro-pausa così da far "sintonia"
            // con eventuali processi di ricreazione del tema
            setTimeout(markSelectedLabel, 0);
          });
        });

        // 3) Se il tema rigenera completamente il markup,
        //    ri-aggancio gli event listener e riazzero la classe
        /*const observer = new MutationObserver((muts) => {
          console.log('MutationObserver attivato');
          ProductForm = document.getElementsByTagName('variant-selects')[0];
          // se dentro cambiano gli elementi…
          markSelectedLabel();
        });

        observer.observe(ProductForm, { childList: true, subtree: true });
*/
        document.body.addEventListener('click', (e) => {
          // apertura popup (già fatto)
          if (e.target.matches('.open-picker')) {
            const handle = e.target.dataset.handle;
            const section = e.target.dataset.section;
            const popup = document.querySelector(`.popup[data-section="${section}"][data-handle="${handle}"]`);
            popup.style.display = 'block';
          }

          // chiusura popup (già fatto)
          if (e.target.matches('.close-popup')) {
            e.target.closest('.popup').style.display = 'none';
          }

          // quando clicchi su una size
          if (e.target.matches('#popup-menu label')) {
            const popup = e.target.closest('.popup');
            const handle = popup.dataset.handle;
            const section = popup.dataset.section;
            const selectedValue = e.target.dataset.value;

            // UI interno

            const disp = document.querySelector(`.selected-size[data-section="${section}"][data-handle="${handle}"]`);
            if (e.target.control.value) disp.textContent = e.target.control.value;
          }
        });
      });
    </script>

    <script type="application/json" data-selected-variant>
      {{ product.selected_or_first_available_variant | json }}
    </script>
  </variant-selects>
{%- endunless -%}
